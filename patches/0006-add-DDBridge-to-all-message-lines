diff --git a/ddbridge/ddbridge-core.c b/ddbridge/ddbridge-core.c
index 1dd5e64..ab88684 100644
--- a/ddbridge/ddbridge-core.c
+++ b/ddbridge/ddbridge-core.c
@@ -438,7 +438,7 @@ static int ddb_unredirect(struct ddb_port *port)
 	mutex_lock(&redirect_lock);
 	if (port->output->dma->running) {
 		mutex_unlock(&redirect_lock);
-		pr_info("ddb_unredirect %d.%d failed\n", port->dev->nr, port->nr);
+		pr_info("DDBridge: ddb_unredirect %d.%d failed\n", port->dev->nr, port->nr);
 		ddb_output_stop(port->output); // so that it woun't fail next time hopefully
 		return -EBUSY;
 	}
@@ -478,13 +478,13 @@ static int disconnect_input(u32 i)
 	int ret = 0;
 
 	if (!idev) {
-		pr_info("disconnect_input failed in line: %d\n", __LINE__);
+		pr_info("DDBridge: disconnect_input failed in line: %d\n", __LINE__);
 		return -EINVAL;
 	}
 
 	input = &idev->input[i & 7];
 	if (!input) {
-		pr_info("disconnect_input failed in line: %d\n", __LINE__);
+		pr_info("DDBridge: disconnect_input failed in line: %d\n", __LINE__);
 		return -EINVAL;
 	}
 	if (input->connected_ci_port) {
@@ -509,17 +509,17 @@ static int ddb_redirect(u32 i, u32 p)
 	else if (!idev->has_dma) line = __LINE__;
 	else if (!pdev->has_dma) line = __LINE__;
 	if (line) {
-		pr_info("ddb_redirect failed in line: %d\n", line);
+		pr_info("DDBridge: ddb_redirect failed in line: %d\n", line);
 		return -EINVAL;
 	}
 
 	port = &pdev->port[p & 0x0f];
 	if (!port->output) {
-		pr_info("ddb_redirect failed in line: %d\n", __LINE__);
+		pr_info("DDBridge: ddb_redirect failed in line: %d\n", __LINE__);
 		return -EINVAL;
 	}
 	if (ddb_unredirect(port)) {
-		pr_info("ddb_redirect failed in line: %d\n", __LINE__);
+		pr_info("DDBridge: ddb_redirect failed in line: %d\n", __LINE__);
 		return -EBUSY;
 	}
 
@@ -528,7 +528,7 @@ static int ddb_redirect(u32 i, u32 p)
 
 	input = &idev->input[i & 7];
 	if (!input) {
-		pr_info("ddb_redirect failed in line: %d\n", __LINE__);
+		pr_info("DDBridge: ddb_redirect failed in line: %d\n", __LINE__);
 		return -EINVAL;
 	}
 
@@ -537,7 +537,7 @@ static int ddb_redirect(u32 i, u32 p)
 	else if (input->dma->running)   line = __LINE__;
 	if (line) {
 		mutex_unlock(&redirect_lock);
-		pr_info("ddb_redirect failed in line: %d\n", line);
+		pr_info("DDBridge: ddb_redirect failed in line: %d\n", line);
 		return -EBUSY;
 	}
 	input2 = port->input[0];
