diff --git a/ddbridge/ddbridge-core.c b/ddbridge/ddbridge-core.c
index 296eaed..cd1dc9f 100644
--- a/ddbridge/ddbridge-core.c
+++ b/ddbridge/ddbridge-core.c
@@ -499,16 +499,23 @@ static int disconnect_input(u32 i)
 {
 	struct ddb *idev = ddbs[(i >> 4) & 0x1f];
 	struct ddb_input *input;
+	int ret = 0;
 
-	if (!idev)
+	if (!idev) {
+		pr_info("disconnect_input failed in line: %d\n", __LINE__);
 		return -EINVAL;
+	}
 
 	input = &idev->input[i & 7];
+	if (!input) {
+		pr_info("disconnect_input failed in line: %d\n", __LINE__);
+		return -EINVAL;
+	}
 	if (input->connected_ci_port) {
-		ddb_unredirect(input->connected_ci_port);
+		ret = ddb_unredirect(input->connected_ci_port);
 		input->connected_ci_port = NULL;
 	}
-	return 0;
+	return ret;
 }
 
 static int ddb_redirect(u32 i, u32 p)
@@ -517,30 +524,44 @@ static int ddb_redirect(u32 i, u32 p)
 	struct ddb_input *input, *input2;
 	struct ddb *pdev = ddbs[(p >> 4) & 0x3f];
 	struct ddb_port *port;
+	int line = 0;
 
 	if (p == 8) return disconnect_input(i);
 
-	if (!idev->has_dma || !pdev->has_dma)
-		return -EINVAL;
-	if (!idev || !pdev)
+	if (!idev)      line = __LINE__;
+	else if (!pdev) line = __LINE__;
+	else if (!idev->has_dma) line = __LINE__;
+	else if (!pdev->has_dma) line = __LINE__;
+	if (line) {
+		pr_info("ddb_redirect failed in line: %d\n", line);
 		return -EINVAL;
+	}
 
 	port = &pdev->port[p & 0x0f];
-	if (!port->output)
+	if (!port->output) {
+		pr_info("ddb_redirect failed in line: %d\n", __LINE__);
 		return -EINVAL;
-	if (ddb_unredirect(port))
+	}
+	if (ddb_unredirect(port)) {
+		pr_info("ddb_redirect failed in line: %d\n", __LINE__);
 		return -EBUSY;
+	}
 
 	if (i == 8)
 		return 0;
 
 	input = &idev->input[i & 7];
-	if (!input)
+	if (!input) {
+		pr_info("ddb_redirect failed in line: %d\n", __LINE__);
 		return -EINVAL;
+	}
 
 	mutex_lock(&redirect_lock);
-	if (port->output->dma->running || input->dma->running) {
+	if (port->output->dma->running) line = __LINE__;
+	else if (input->dma->running)   line = __LINE__;
+	if (line) {
 		mutex_unlock(&redirect_lock);
+		pr_info("ddb_redirect failed in line: %d\n", line);
 		return -EBUSY;
 	}
 	input2 = port->input[0];
